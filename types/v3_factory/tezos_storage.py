# generated by DipDup 8.5.0

from __future__ import annotations

from typing import Any

from pydantic import BaseModel
from pydantic import ConfigDict


class PauseState(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    set_position_pause: dict[str, Any]


class PauseState1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    update_position_pause: dict[str, Any]


class PauseState2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    x_to_y_pause: dict[str, Any]


class PauseState3(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    y_to_x_pause: dict[str, Any]


class TokenX(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa12: str


class Fa2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    token_id: str
    token_address: str


class TokenX1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa2: Fa2


class TokenY(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa12: str


class TokenY1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fa2: Fa2


class Key(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fee_bps: str
    token_x: TokenX | TokenX1
    token_y: TokenY | TokenY1


class PoolId(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    key: Key
    value: str


class V3FactoryStorage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dev_fee_bps: str
    owner: str
    pause_state: list[PauseState | PauseState1 | PauseState2 | PauseState3]
    pending_owner: str | None = None
    pool_count: str
    pool_ids: list[PoolId]
    pools: dict[str, str]
